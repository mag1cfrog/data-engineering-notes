---
import type { HTMLAttributes } from 'astro/types';

/* 1️⃣ Force href to be a string so TS stops complaining */
interface Props extends Omit<HTMLAttributes<'a'>, 'href'> {
  href: string;
}
const { href, class: className, ...rest } = Astro.props as Props;

const base = import.meta.env.BASE_URL || '/';

const finalHref = href === '/' ? base : base + href.replace(/^\//, '');

/* 3️⃣ Active-link logic – compare full paths */
const current = Astro.url.pathname;          // already includes base
// For the home page, only match exactly
// For other pages, match exactly OR if current starts with finalHref but not with base alone
const isActive = href === '/' 
  ? current === finalHref
  : current === finalHref || (current.startsWith(finalHref + '/') && finalHref !== base);

/* 4️⃣ Combine classes */
const classes = [className, { active: isActive }];
---

<a href={finalHref} class:list={classes} {...rest}>
  <slot />
</a>

<style>
  a { display:inline-block; text-decoration:none; }
  a.active { font-weight:bold; text-decoration:underline; }
</style>
